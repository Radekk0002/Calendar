@using Server.Models

@inject ToDoService ToDoService

@if (ToDo != null)
{
    <div class="ml-5 d-flex justify-conent-between align-items-start">
        <div id="toDo" class="flex-grow-1">
            <h6>@ToDo.Start.ToString("HH:mm") - @ToDo.End.ToString("HH:mm")</h6>
            <p id="toDoText" class="m-0 pl-2 pr-1">@ToDo.Text</p>
        </div>
        <div class="ml-2 mr-4">
            <i class="fas fa-edit mr-2 p-1" @onclick="ToggleForm"></i>
            <i class="fas fa-trash p-1" @onclick="DeleteToDo"></i>
        </div>
    </div>
    @if (showEditForm)
    {
        <div class="formOverlay" @onclick="ToggleForm">
        </div>
        <EditToDoForm OnEditedToDo="EditToDo"></EditToDoForm>
    }

}




@code {
    private bool showEditForm { get; set; }

    [CascadingParameter]
    public ToDo ToDo { get; set; }

    [Parameter]
    public EventCallback<ToDo> OnToDoDelete { get; set; }


    private void ToggleForm()
    {
        showEditForm = !showEditForm;
    }

    public void EditToDo(ToDo todo)
    {
        if (todo != null)
        {
            ToDoService.UpdateToDo(todo, todo.UserToDoId);
        }
        showEditForm = false;
    }

    public async void DeleteToDo()
    {
        await OnToDoDelete.InvokeAsync(this.ToDo);
    }
}
